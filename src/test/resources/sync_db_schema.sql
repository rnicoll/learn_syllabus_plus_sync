CREATE SCHEMA learn_group;

CREATE GLOBAL TEMPORARY TABLE learn_group.activity_template (
  tt_template_id VARCHAR(32) NOT NULL,
  tt_template_name VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (tt_template_id)
);

CREATE GLOBAL TEMPORARY TABLE learn_group.activity_type (
  tt_type_id VARCHAR(32) NOT NULL,
  tt_type_name VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (tt_type_id)
);

CREATE GLOBAL TEMPORARY TABLE learn_group.module (
  tt_module_id VARCHAR(32) NOT NULL,
  tt_course_code VARCHAR(20) DEFAULT NULL,
  tt_module_name VARCHAR(255) DEFAULT NULL,
  tt_academic_year VARCHAR(12) DEFAULT NULL,
  cache_semester_code VARCHAR(6) DEFAULT NULL,
  cache_occurrence_code VARCHAR(6) DEFAULT NULL,
  cache_course_code VARCHAR(12) DEFAULT NULL,
  merge_course_code VARCHAR(40) DEFAULT NULL,
  learn_academic_year VARCHAR(6) DEFAULT NULL,
  learn_course_code VARCHAR(40) DEFAULT NULL,
  learn_course_id VARCHAR(80) DEFAULT NULL,
  webct_active CHAR(1) DEFAULT NULL,
  PRIMARY KEY (tt_module_id)
);

CREATE GLOBAL TEMPORARY TABLE learn_group.activity (
  tt_activity_id VARCHAR(32) NOT NULL,
  tt_activity_name VARCHAR(255) DEFAULT NULL,
  tt_module_id VARCHAR(32) DEFAULT NULL,
  tt_template_id VARCHAR(32) DEFAULT NULL,
  tt_type_id VARCHAR(32) DEFAULT NULL,
  tt_jta_activity_id VARCHAR(32) DEFAULT NULL,
  learn_group_id VARCHAR(80) DEFAULT NULL,
  learn_group_name VARCHAR(255) DEFAULT NULL,
  learn_group_created DATETIME DEFAULT NULL,
  description CLOB,
  PRIMARY KEY (tt_activity_id),
  CONSTRAINT activity_module FOREIGN KEY (tt_module_id) REFERENCES module (tt_module_id),
  CONSTRAINT activity_template FOREIGN KEY (tt_template_id) REFERENCES activity_template (tt_template_id)
);

CREATE GLOBAL TEMPORARY TABLE learn_group.synchronisation_run (
  run_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  previous_run_id INTEGER DEFAULT NULL,
  start_time DATETIME NOT NULL,
  cache_copy_completed DATETIME DEFAULT NULL,
  diff_completed DATETIME DEFAULT NULL,
  end_time DATETIME DEFAULT NULL
);

CREATE GLOBAL TEMPORARY TABLE learn_group.cache_enrolment (
  run_id INTEGER NOT NULL,
  tt_student_set_id VARCHAR(32) NOT NULL,
  tt_activity_id VARCHAR(32) NOT NULL,
  PRIMARY KEY (run_id,tt_student_set_id,tt_activity_id),
  CONSTRAINT cache_enrolment_ibfk_1 FOREIGN KEY (tt_activity_id) REFERENCES activity (tt_activity_id),
  CONSTRAINT cache_enrolment_ibfk_2 FOREIGN KEY (run_id) REFERENCES synchronisation_run (run_id)
);

CREATE GLOBAL TEMPORARY TABLE learn_group.change_result (
  result_code VARCHAR(20) NOT NULL,
  label VARCHAR(80) NOT NULL,
  retry TINYINT DEFAULT '0' NOT NULL,
  PRIMARY KEY (result_code)
);

CREATE GLOBAL TEMPORARY TABLE learn_group.change_type (
  change_type VARCHAR(12) NOT NULL,
  PRIMARY KEY (change_type)
);

CREATE GLOBAL TEMPORARY TABLE learn_group.student_set (
  tt_student_set_id VARCHAR(32) NOT NULL,
  tt_host_key VARCHAR(32) NOT NULL,
  learn_person_id VARCHAR(80) DEFAULT NULL,
  PRIMARY KEY (tt_student_set_id)
);

CREATE GLOBAL TEMPORARY TABLE learn_group.enrolment_change (
  change_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  run_id INTEGER NOT NULL,
  tt_activity_id VARCHAR(32) NOT NULL,
  tt_student_set_id VARCHAR(32) NOT NULL,
  change_type VARCHAR(12) NOT NULL,
  result_code VARCHAR(20) DEFAULT NULL,
  update_completed DATETIME DEFAULT NULL,
  CONSTRAINT enrolment_change_activ FOREIGN KEY (tt_activity_id) REFERENCES activity (tt_activity_id),
  CONSTRAINT enrolment_change_res FOREIGN KEY (result_code) REFERENCES change_result (result_code),
  CONSTRAINT enrolment_change_run FOREIGN KEY (run_id) REFERENCES synchronisation_run (run_id),
  CONSTRAINT enrolment_change_stu FOREIGN KEY (tt_student_set_id) REFERENCES student_set (tt_student_set_id),
  CONSTRAINT enrolment_change_type FOREIGN KEY (change_type) REFERENCES change_type (change_type)
);

CREATE VIEW learn_group.activity_set_size_vw AS
	(SELECT a.tt_activity_id, COUNT(b.tt_activity_id) AS set_size
		FROM learn_group.activity a
			LEFT JOIN learn_group.activity_template t ON t.tt_template_id = a.tt_template_id
			LEFT JOIN learn_group.activity b ON t.tt_template_id = b.tt_template_id
		GROUP BY a.tt_activity_id
	);


CREATE VIEW learn_group.sync_activities_vw AS
	(SELECT a.tt_activity_id, a.tt_activity_name, a.tt_jta_activity_id, 
			a.learn_group_id, a.description, a.tt_type_id, a.tt_template_id,
			m.learn_course_code, m.learn_course_id, s.set_size
		FROM learn_group.activity a
			JOIN learn_group.module m ON m.tt_module_id = a.tt_module_id
			JOIN learn_group.activity_set_size_vw s ON s.tt_activity_id = a.tt_activity_id
		WHERE m.webct_active = 'Y'
			AND s.set_size > '1'
	);

CREATE VIEW learn_group.sync_student_set_vw AS
	(SELECT s.tt_student_set_id, s.tt_host_key username, s.learn_person_id
		FROM learn_group.student_set s
		WHERE LEFT(s.tt_host_key, 6)!='#SPLUS'
	);

CREATE VIEW learn_group.added_enrolment_vw AS
	(SELECT a.run_id AS run_id,a.previous_run_id, ca.tt_student_set_id, ca.tt_activity_id, 'add' AS change_type
		FROM learn_group.synchronisation_run a
			JOIN learn_group.cache_enrolment ca ON ca.run_id = a.run_id
			JOIN learn_group.sync_activities_vw act ON act.tt_activity_id = ca.tt_activity_id
			JOIN learn_group.sync_student_set_vw stu ON stu.tt_student_set_id = ca.tt_student_set_id
			LEFT JOIN learn_group.synchronisation_run b ON b.run_id = a.previous_run_id
			LEFT JOIN learn_group.cache_enrolment cb ON cb.run_id = b.run_id AND cb.tt_student_set_id = ca.tt_student_set_id AND cb.tt_activity_id = ca.tt_activity_id
		WHERE cb.tt_student_set_id IS NULL);

CREATE VIEW learn_group.removed_enrolment_vw AS
	(SELECT a.run_id AS run_id,a.previous_run_id AS previous_run_id,ca.tt_student_set_id AS tt_student_set_id,ca.tt_activity_id AS tt_activity_id,'remove' AS change_type
		FROM learn_group.synchronisation_run a
			JOIN learn_group.synchronisation_run b ON b.run_id = a.previous_run_id 
			JOIN learn_group.cache_enrolment cb ON cb.run_id = b.run_id
			JOIN learn_group.sync_activities_vw act ON act.tt_activity_id = cb.tt_activity_id
			JOIN learn_group.sync_student_set_vw stu ON stu.tt_student_set_id = cb.tt_student_set_id
			LEFT JOIN learn_group.cache_enrolment ca ON ca.run_id = a.run_id AND cb.tt_student_set_id = ca.tt_student_set_id AND cb.tt_activity_id = ca.tt_activity_id
		WHERE ca.tt_student_set_id IS NULL);
